import asyncio
import logging
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils import executor
from db import Database
import pandas as pd
from datetime import datetime, timezone, timedelta

API_TOKEN = '6804724660:AAGOns2OYhSTXNK7Y5VcPeBpnxhwDzBLJHk'
GROUP_ID = -4148945641
ADMIN_IDS = [6025479588]
SPREADSHEET_NAME = '–ê–ë–ò–¢–£–†–ê 2024 –ö–£–†–°–û–í–û–ô –ü–†–û–ï–ö–¢'

scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive.file", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_name('tgbot-abitura-e3882cb073ec.json', scope)
client = gspread.authorize(creds)

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)
db = Database('database.db')

user_states = {}

START_TEXT = "–ü—Ä–∏–≤–µ—Ç, –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç! üëãüèª\n\n –Ø ‚Äî –±–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ç–≤–æ–µ–≥–æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—èüéì\n\n –ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –∫–∞–∫–∏–µ-—Ç–æ –≤–æ–ø—Ä–æ—Å—ã, –≤—ã–±–∏—Ä–∞–π –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –∏ –ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ‚úâÔ∏è, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—èüòä, –Ω–∞—à–∏ –ø–æ–º–æ—â–Ω–∏–∫–∏ —Å —Ä–∞–¥–æ—Å—Ç—å—é –æ—Ç–≤–µ—Ç—è—Ç –Ω–∞ —Å–∞–º—ã–µ —Ä–∞–∑–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–º–æ–≥—É—Ç —Ç–µ–±–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è!üöÄ"

faq_text = """
***FAQ –ù–ò–£ –í–®–≠ ‚Äì –ü–µ—Ä–º—å***

***1. –ö–∞–∫–∏–µ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ù–ò–£ –í–®–≠ ‚Äì –ü–µ—Ä–º—å?***
–ù–ò–£ –í–®–≠ –≤ –ü–µ—Ä–º–∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º—ã –±–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç–∞, –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—ã, –∞—Å–ø–∏—Ä–∞–Ω—Ç—É—Ä—ã –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã. –ü–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º –Ω–∞ —Å–∞–π—Ç–µ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞.

***2. –ö–∞–∫ –ø–æ–¥–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ?***
–î–æ–∫—É–º–µ–Ω—Ç—ã –º–æ–∂–Ω–æ –ø–æ–¥–∞—Ç—å —á–µ—Ä–µ–∑ –æ–Ω–ª–∞–π–Ω-—Å–∏—Å—Ç–µ–º—É —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞. –î–ª—è –±–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç–∞, –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—ã –∏ –∞—Å–ø–∏—Ä–∞–Ω—Ç—É—Ä—ã –µ—Å—Ç—å —Ä–∞–∑–Ω—ã–µ —Å—Ä–æ–∫–∏ –∏ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –ø–æ–¥–∞—á–∏. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ä–∞–∑–¥–µ–ª–∞—Ö —Å–∞–π—Ç–∞.

***3. –ö–∞–∫–∏–µ –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–µ —ç–∫–∑–∞–º–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–¥–∞—Ç—å?***  
–°–ø–∏—Å–æ–∫ –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã—Ö —ç–∫–∑–∞–º–µ–Ω–æ–≤ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –æ–±—É—á–µ–Ω–∏—è. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —ç–∫–∑–∞–º–µ–Ω–∞—Ö –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö –ø—Ä–æ–≥—Ä–∞–º–º –±–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç–∞, –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—ã –∏ –∞—Å–ø–∏—Ä–∞–Ω—Ç—É—Ä—ã.

***4. –ö–∞–∫–∏–µ –ª—å–≥–æ—Ç—ã –∏ —Å—Ç–∏–ø–µ–Ω–¥–∏–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç?***  
–ù–ò–£ –í–®–≠ ‚Äì –ü–µ—Ä–º—å –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–∏–¥—ã —Å—Ç–∏–ø–µ–Ω–¥–∏–π, –≤–∫–ª—é—á–∞—è –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–µ, —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ø–µ–Ω–¥–∏–∏ –¥–ª—è –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤. –õ—å–≥–æ—Ç—ã —Ç–∞–∫–∂–µ –º–æ–≥—É—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å—Å—è –ø–æ–±–µ–¥–∏—Ç–µ–ª—è–º –æ–ª–∏–º–ø–∏–∞–¥ –∏ –∫–æ–Ω–∫—É—Ä—Å–æ–≤.

***5. –ö–∞–∫–æ–≤–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è?***
–°—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è –≤–∞—Ä—å–∏—Ä—É–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ —É—Ä–æ–≤–Ω—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏. –ü–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –æ–±—É—á–µ–Ω–∏—è –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª–µ [–ü–æ—Å—Ç—É–ø–∞—é—â–∏–º](https://perm.hse.ru/admission).

***6. –ö–∞–∫–∏–µ –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤?***
–î–ª—è –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ù–ò–£ –í–®–≠ ‚Äì –ü–µ—Ä–º—å –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç–µ–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã, –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ –∏–∑—É—á–µ–Ω–∏—é —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ –¥–ª—è –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤.

***7. –ö–∞–∫ –º–æ–∂–Ω–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—é?***  
–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç–µ–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã –∫ –ï–ì–≠, —Ñ–∞–∫—É–ª—å—Ç–µ—Ç –¥–æ–≤—É–∑–æ–≤—Å–∫–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∏ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –¥–ª—è —à–∫–æ–ª—å–Ω–∏–∫–æ–≤, —Ç–∞–∫–∏–µ –∫–∞–∫ –æ–ª–∏–º–ø–∏–∞–¥—ã –∏ –æ—Ç–∫—Ä—ã—Ç—ã–µ –¥–Ω–∏. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∏—Ö –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª–µ [–®–∫–æ–ª—å–Ω–∏–∫–∞–º](https://perm.hse.ru/schoolchildren).

***8. –ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã –¥–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è?***  
–î–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –ø–∞—Å–ø–æ—Ä—Ç, –∞—Ç—Ç–µ—Å—Ç–∞—Ç –∏–ª–∏ –¥–∏–ø–ª–æ–º, —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ï–ì–≠ (–¥–ª—è –±–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç–∞), –º–µ–¥–∏—Ü–∏–Ω—Å–∫—É—é —Å–ø—Ä–∞–≤–∫—É –∏ –¥—Ä—É–≥–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è. –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ –¥–ª—è –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤.

***9. –ö–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–∏–µ–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–µ–π?***  
–í—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–∏–µ–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–µ–π –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É (342) 205-52-50 –∏–ª–∏ –ø–æ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç–µ infoperm@hse.ru. –¢–∞–∫–∂–µ –¥–æ—Å—Ç—É–ø–Ω—ã –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –≤–µ–±–∏–Ω–∞—Ä—ã.

***10. –ì–¥–µ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–º–ø—É—Å–µ?***  
–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–º–ø—É—Å–µ, –æ–±—â–µ–∂–∏—Ç–∏—è—Ö –∏ –¥—Ä—É–≥–∏—Ö –∞—Å–ø–µ–∫—Ç–∞—Ö –∂–∏–∑–Ω–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ —Å–∞–π—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª–µ [–û –í—ã—à–∫–µ](https://perm.hse.ru/info).
"""

# –ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
start_keyboard = InlineKeyboardMarkup(row_width=1)
start_keyboard.add(
    InlineKeyboardButton("FAQ", callback_data='show_faq'),
    InlineKeyboardButton("–£–∑–Ω–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥", callback_data='check_rating'),
    InlineKeyboardButton("–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data='ask_question'),
    InlineKeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –í–£–ó–µ", callback_data='info_v_vuze')
)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤—É–∑–µ
info_vuz_keyboard = InlineKeyboardMarkup(row_width=1)
info_vuz_keyboard.add(
    InlineKeyboardButton("–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ", url='https://perm.hse.ru/bacalavr/'),
    InlineKeyboardButton("–û–±—â–µ–∂–∏—Ç–∏–µ", url='https://perm.hse.ru/dormitory'),
    InlineKeyboardButton("–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã", url='https://perm.hse.ru/bacalavr/#programmes'),
    InlineKeyboardButton("–í–æ–µ–Ω–Ω–∞—è –∫–∞—Ñ–µ–¥—Ä–∞", url='https://perm.hse.ru/martial/'),
    InlineKeyboardButton("–°—Ç—É–¥–µ–Ω—á–µ—Å–∫–∞—è –∂–∏–∑–Ω—å", url='http://students.perm.hse.ru/'),
    InlineKeyboardButton("–°–æ—Ü-—Å–µ—Ç–∏", url='https://www.hse.ru/hse_community'),
    InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_start')
)

programs_keyboard = InlineKeyboardMarkup(row_width=1)
programs = [
    "–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è",
    "–ë–∏–∑–Ω–µ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞",
    "–Æ—Ä–∏—Å–ø—Ä—É–¥–µ–Ω—Ü–∏—è",
    "–õ–∏–Ω–≥–≤–∏—Å—Ç–∏–∫–∞",
    "–î–∏–∑–∞–π–Ω",
    "–≠–∫–æ–Ω–æ–º–∏–∫–∞",
    "–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç"
]
for program in programs:
    programs_keyboard.add(InlineKeyboardButton(program, callback_data=f'program_{program}'))

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    await message.answer(START_TEXT, reply_markup=start_keyboard)
    if message.chat.type == 'private':
        if not db.user_exists(message.from_user.id):
            db.add_user(message.from_user.id)

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã —Ä–∞—Å—Å—ã–ª–∫–∏
@dp.message_handler(commands=['send'])
async def send(message: types.Message):
    if message.chat.type == 'private':
        if message.from_user.id in ADMIN_IDS:
            text = message.text[6:]
            users = db.get_users()
            for row in users:
                try:
                    await bot.send_message(row[0], text)
                    if int(row[1]) != 1:
                        db.set_active(row[0], 1)
                except:
                    db.set_active(row[0], 0)
            await bot.send_message(message.from_user.id, "–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!")
        else:
            await bot.send_message(message.from_user.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.")

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞
@dp.callback_query_handler(lambda c: c.data == 'check_rating')
async def process_check_rating(callback_query: types.CallbackQuery):
    user_states[callback_query.from_user.id] = 'check_rating'
    await bot.send_message(callback_query.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞ –∏ —Å–µ—Ä–∏—é –ø–∞—Å–ø–æ—Ä—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 1111222222")
    await bot.answer_callback_query(callback_query.id)

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –≤–æ–ø—Ä–æ—Å–∞
@dp.callback_query_handler(lambda c: c.data == 'ask_question')
async def process_ask_question(callback_query: types.CallbackQuery):
    user_states[callback_query.from_user.id] = 'ask_question'
    await bot.edit_message_text(chat_id=callback_query.from_user.id, message_id=callback_query.message.message_id, text="–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É:", reply_markup=programs_keyboard)
    await bot.answer_callback_query(callback_query.id)

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ FAQ
@dp.callback_query_handler(lambda c: c.data == 'show_faq')
async def process_show_faq(callback_query: types.CallbackQuery):
    back_keyboard = InlineKeyboardMarkup(row_width=1)
    back_keyboard.add(InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_start'))
    await bot.edit_message_text(chat_id=callback_query.from_user.id, message_id=callback_query.message.message_id, text=faq_text, reply_markup=back_keyboard, parse_mode="Markdown")
    await bot.answer_callback_query(callback_query.id)

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—É–∑–µ
@dp.callback_query_handler(lambda c: c.data == 'info_v_vuze')
async def process_info_v_vuze(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.from_user.id, message_id=callback_query.message.message_id, text="–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª:", reply_markup=info_vuz_keyboard)
    await bot.answer_callback_query(callback_query.id)

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥
@dp.callback_query_handler(lambda c: c.data == 'back_to_start')
async def process_back_to_start(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.from_user.id, message_id=callback_query.message.message_id, text=START_TEXT, reply_markup=start_keyboard)
    await bot.answer_callback_query(callback_query.id)

@dp.callback_query_handler(lambda c: c.data.startswith('program_'))
async def process_program_choice(callback_query: types.CallbackQuery):
    program_name = callback_query.data.split('_')[1]
    user_states[callback_query.from_user.id] = f'ask_question_{program_name}'
    await bot.edit_message_text(chat_id=callback_query.from_user.id, message_id=callback_query.message.message_id, text=f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É: {program_name}\n–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å.")
    await bot.answer_callback_query(callback_query.id)

@dp.message_handler()
async def handle_message(message: types.Message):
    user_id = message.from_user.id
    user_state = user_states.get(user_id)

    # –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è check_rating
    if user_state == 'check_rating':
        passport_number = message.text.strip()
        if not passport_number.isdigit() or len(passport_number) != 10:
            await message.answer("–í–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, XXXX - —Å–µ—Ä–∏—è, XXXXXX - –Ω–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞.")
            return

        processing_message = await message.answer("–í –æ–±—Ä–∞–±–æ—Ç–∫–µ...")
        for i in range(3):
            await asyncio.sleep(1)
            await bot.edit_message_text(chat_id=message.chat.id, message_id=processing_message.message_id, text=f"–ü–æ–∏—Å–∫ –ø–æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö{'.' * (i % 3 + 1)}")

        spreadsheet = client.open(SPREADSHEET_NAME)
        results = []
        fio_output = None

        for sheet in spreadsheet.worksheets():
            data = sheet.get_all_values()
            df = pd.DataFrame(data[1:], columns=data[0])
            passport_column = df.columns[df.columns.str.contains('–ü–ê–°–ü–û–†–¢', case=False)].values[0]
            if passport_column:
                user_data = df[df[passport_column] == passport_number]
                if not user_data.empty:
                    for _, row in user_data.iterrows():
                        if not fio_output:
                            fio_output = f"{row['–§–ò–û']}\n"
                        program_name = sheet.title
                        result = f"\n{program_name}\n\n"
                        subject_scores = []
                        for column in df.columns:
                            if column not in ['–ù–û–ú–ï–† –î–û–ì–û–í–û–†–ê', '–§–ò–û', '–ü–ê–°–ü–û–†–¢', '–°–£–ú–ú–ê –ë–ê–õ–õ–û–í', '–†–ï–ô–¢–ò–ù–ì', '–£–ß. –ó–ê–í–ï–î–ï–ù–ò–ï', '–ù–û–ú–ï–†', '–ü–û–ß–¢–ê']:
                                subject_name = data[0][df.columns.get_loc(column)]
                                subject_score = row[column]
                                subject_scores.append(f"{subject_name.upper()}: {subject_score}")
                        result += '\n'.join(subject_scores)
                        total_score = row['–°–£–ú–ú–ê –ë–ê–õ–õ–û–í']
                        rating = row['–†–ï–ô–¢–ò–ù–ì']
                        result += f"\n\n–°—É–º–º–∞ –±–∞–ª–ª–æ–≤: {total_score}\n–ú–µ—Å—Ç–æ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ: {rating}\n"
                        results.append(result)

        if fio_output:
            final_output = fio_output + '\n'.join(results)
            await bot.edit_message_text(chat_id=message.chat.id, message_id=processing_message.message_id, text=final_output)
        else:
            await bot.edit_message_text(chat_id=message.chat.id, message_id=processing_message.message_id, text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –¥–∞–Ω–Ω–æ–º—É –ø–∞—Å–ø–æ—Ä—Ç—É –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        user_states.pop(user_id, None)

    # –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è ask_question
    elif user_state and user_state.startswith('ask_question_'):
        program_name = user_state.split('_')[2]
        tz = timezone(timedelta(hours=5))
        current_time = datetime.now(tz).strftime('%Y-%m-%d %H:%M:%S')
        user_info = (
            f"–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {current_time}\n"
            f"Username: @{message.from_user.username}\n"
            f"–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞: {program_name}\n"
            "–°–æ–æ–±—â–µ–Ω–∏–µ:\n"
            f"{message.text}"
        )

        sent_message = await bot.send_message(GROUP_ID, user_info)
        await message.answer("–í–∞—à –≤–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞—à–∏–º –∫—É—Ä–∞—Ç–æ—Ä–∞–º. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.")
        user_states.pop(user_id, None)
    else:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=start_keyboard)

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤—Å–µ–≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –≤–≤–æ–¥–∞
@dp.message_handler(content_types=types.ContentType.ANY)
async def handle_any_message(message: types.Message):
    content_type = message.content_type
    if content_type == types.ContentType.PHOTO:
        await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –ø–æ–∫–∞ –Ω–µ —É–º–µ—é –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–∏ ;(")
    elif content_type == types.ContentType.VOICE:
        await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –ø–æ–∫–∞ –Ω–µ —É–º–µ—é –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è ;(")
    elif content_type == types.ContentType.STICKER:
        await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –ø–æ–∫–∞ –Ω–µ —É–º–µ—é –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å—Ç–∏–∫–µ—Ä—ã ;(")
    elif content_type == types.ContentType.DOCUMENT:
        await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –ø–æ–∫–∞ –Ω–µ —É–º–µ—é –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã ;(")
    elif content_type == types.ContentType.VIDEO:
        await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –ø–æ–∫–∞ –Ω–µ —É–º–µ—é –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤–∏–¥–µ–æ ;(")
    elif content_type == types.ContentType.AUDIO:
        await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –ø–æ–∫–∞ –Ω–µ —É–º–µ—é –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã ;(")
    elif content_type == types.ContentType.CONTACT:
        await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –ø–æ–∫–∞ –Ω–µ —É–º–µ—é –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã ;(")
    elif content_type == types.ContentType.LOCATION:
        await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –ø–æ–∫–∞ –Ω–µ —É–º–µ—é –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ª–æ–∫–∞—Ü–∏–∏ ;(")
    elif content_type == types.ContentType.VIDEO_NOTE:
        await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –ø–æ–∫–∞ –Ω–µ —É–º–µ—é –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏—è ;(")
    elif content_type == types.ContentType.POLL:
        await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –ø–æ–∫–∞ –Ω–µ —É–º–µ—é –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ–ø—Ä–æ—Å—ã ;(")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
